{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FSAD-1\\\\weather-app\\\\src\\\\WeatherApp.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-undef */\nimport React, { useEffect, useState } from 'react';\nimport WeatherTile from './components/WeatherTile';\nimport Search from './components/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherApp() {\n  _s();\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const [data, setData] = useState();\n  let message;\n\n  // called on very first render - get weather data for current location\n  useEffect(() => {\n    console.log(\"Use Effect is Calledd!!\");\n    fetchWeatherData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const fetchWeatherData = async () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setLatitude(latitude);\n      setLongitude(longitude);\n    }, err => {\n      console.log(err);\n      handleError(err);\n    }, {\n      enableHighAccuracy: false,\n      maximumAge: 700000\n    });\n    fetchWeatherDataBasedOnLatLong(latitude, longitude);\n  };\n  async function fetchWeatherDataBasedOnLatLong(latitude, longitude) {\n    if (latitude && longitude) {\n      await fetch(`${process.env.REACT_APP_WEATHER_APP_API_URL}?lat=${latitude}&lon=${longitude}&appid=${process.env.REACT_APP_WEATHER_APP_API_KEY}`).then(res => res.json()).then(res => {\n        console.log(res);\n        if (res) {\n          setData(res);\n        } else {\n          setData([]);\n        }\n      }).catch(e => console.log(e));\n    } else {\n      message = \"Please allow location access to view the weather.\";\n    }\n  }\n\n  // Fetch data based on user entered location\n  const fecthDataForEnteredLocation = async userInput => {\n    if (userInput) {\n      await fetch(`${process.env.REACT_APP_WEATHER_APP_API_URL_GEO}?q=${userInput}&limit=${1}&appid=${process.env.REACT_APP_WEATHER_APP_API_KEY}`).then(res => res.json()).then(res => {\n        console.log(res);\n        if (res) {\n          fetchWeatherDataBasedOnLatLong(res[0].lat, res[0].long);\n        } else {\n          setData([]);\n        }\n      }).catch(e => {\n        console.error(e, \"API Request to fetch data based on location failed!\");\n      });\n    }\n  };\n  function handleError(error) {\n    // Display error based on the error code.\n    const {\n      code\n    } = error;\n    switch (code) {\n      case GeolocationPositionError.TIMEOUT:\n        // Handle timeout.\n        message = \"Connection timeout.\";\n        break;\n      case GeolocationPositionError.PERMISSION_DENIED:\n        // User denied the request.\n        message = \"Please allow location access to view the weather.\";\n        break;\n      case GeolocationPositionError.POSITION_UNAVAILABLE:\n        // Position not available.\n        message = \"Weather for current position is not available\";\n        break;\n      default:\n        break;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-between items-center\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSubmit: fecthDataForEnteredLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-2\",\n      children: data ? /*#__PURE__*/_jsxDEV(WeatherTile, {\n        weatherData: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherApp, \"NOlcL2zd8CcNMm9NUnF2ZEBKHhc=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useEffect","useState","WeatherTile","Search","WeatherApp","latitude","setLatitude","longitude","setLongitude","data","setData","message","console","log","fetchWeatherData","navigator","geolocation","getCurrentPosition","position","coords","err","handleError","enableHighAccuracy","maximumAge","fetchWeatherDataBasedOnLatLong","fetch","process","env","REACT_APP_WEATHER_APP_API_URL","REACT_APP_WEATHER_APP_API_KEY","then","res","json","catch","e","fecthDataForEnteredLocation","userInput","REACT_APP_WEATHER_APP_API_URL_GEO","lat","long","error","code","GeolocationPositionError","TIMEOUT","PERMISSION_DENIED","POSITION_UNAVAILABLE"],"sources":["C:/Users/FSAD-1/weather-app/src/WeatherApp.js"],"sourcesContent":["/* eslint-disable no-undef */\r\nimport React, { useEffect, useState } from 'react';\r\nimport WeatherTile from './components/WeatherTile';\r\nimport Search from './components/Search';\r\n\r\nfunction WeatherApp() {\r\n\r\n    const [latitude, setLatitude] = useState();\r\n    const [longitude, setLongitude] = useState();\r\n    const [data, setData] = useState();\r\n    let message;\r\n\r\n    // called on very first render - get weather data for current location\r\n    useEffect(() => {\r\n        console.log(\"Use Effect is Calledd!!\");\r\n        fetchWeatherData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const fetchWeatherData = async () => {\r\n\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            setLatitude(latitude);\r\n            setLongitude(longitude);\r\n        }, (err) => {\r\n            console.log(err);\r\n            handleError(err);\r\n        }, { enableHighAccuracy: false, maximumAge: 700_000 });\r\n\r\n        fetchWeatherDataBasedOnLatLong(latitude, longitude);\r\n    };\r\n\r\n    async function fetchWeatherDataBasedOnLatLong(latitude, longitude) {\r\n        if (latitude && longitude) {\r\n            await fetch(`${process.env.REACT_APP_WEATHER_APP_API_URL}?lat=${latitude}&lon=${longitude}&appid=${process.env.REACT_APP_WEATHER_APP_API_KEY}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res);\r\n                    if (res) {\r\n                        setData(res);\r\n                    } else {\r\n                        setData([]);\r\n                    }\r\n                }).catch(e => console.log(e));\r\n        } else {\r\n            message = \"Please allow location access to view the weather.\";\r\n        }\r\n    }\r\n\r\n    // Fetch data based on user entered location\r\n    const fecthDataForEnteredLocation = async (userInput) => {\r\n        if (userInput) {\r\n            await fetch(`${process.env.REACT_APP_WEATHER_APP_API_URL_GEO}?q=${userInput}&limit=${1}&appid=${process.env.REACT_APP_WEATHER_APP_API_KEY}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res);\r\n                    if (res) {\r\n                        fetchWeatherDataBasedOnLatLong(res[0].lat, res[0].long);\r\n                    } else {\r\n                        setData([]);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.error(e, \"API Request to fetch data based on location failed!\");\r\n                });\r\n        }\r\n    };\r\n\r\n    function handleError(error) {\r\n        // Display error based on the error code.\r\n        const { code } = error;\r\n        switch (code) {\r\n            case GeolocationPositionError.TIMEOUT:\r\n                // Handle timeout.\r\n                message = \"Connection timeout.\"\r\n                break;\r\n            case GeolocationPositionError.PERMISSION_DENIED:\r\n                // User denied the request.\r\n                message = \"Please allow location access to view the weather.\"\r\n                break;\r\n            case GeolocationPositionError.POSITION_UNAVAILABLE:\r\n                // Position not available.\r\n                message = \"Weather for current position is not available\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-between items-center\">\r\n            <Search onSubmit={fecthDataForEnteredLocation} />\r\n            <div className='m-2'>\r\n                {\r\n                    data ?\r\n                        <WeatherTile weatherData={data} /> :\r\n                        <h1>{message}</h1>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherApp\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}