{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/FSAD-1/weather-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/FSAD-1/weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/FSAD-1/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/* eslint-disable no-undef */import React,{useEffect,useState}from'react';import WeatherTile from'./components/WeatherTile';import Search from'./components/Search';import InfoTile from'./components/InfoTile';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function WeatherApp(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),latitude=_useState2[0],setLatitude=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),longitude=_useState4[0],setLongitude=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];var message;// called on very first render - get weather data for current location\nuseEffect(function(){console.log(\"Use Effect is Called!!\");fetchWeatherData();// eslint-disable-next-line\n},[latitude,longitude]);var fetchWeatherData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:navigator.geolocation.getCurrentPosition(function(position){var _position$coords=position.coords,latitude=_position$coords.latitude,longitude=_position$coords.longitude;setLatitude(latitude);setLongitude(longitude);},function(err){console.log(err);handleError(err);},{enableHighAccuracy:false,maximumAge:700000});fetchWeatherDataBasedOnLatLong(latitude,longitude);case 2:case\"end\":return _context.stop();}},_callee);}));return function fetchWeatherData(){return _ref.apply(this,arguments);};}();function fetchWeatherDataBasedOnLatLong(_x,_x2){return _fetchWeatherDataBasedOnLatLong.apply(this,arguments);}// Fetch data based on user entered location\nfunction _fetchWeatherDataBasedOnLatLong(){_fetchWeatherDataBasedOnLatLong=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(latitude,longitude){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:if(!(latitude&&longitude)){_context3.next=5;break;}_context3.next=3;return fetch(\"\".concat(process.env.REACT_APP_WEATHER_APP_API_URL,\"?lat=\").concat(latitude,\"&lon=\").concat(longitude,\"&appid=\").concat(process.env.REACT_APP_WEATHER_APP_API_KEY)).then(function(res){return res.json();}).then(function(res){console.log(res);if(res){setData(res);}else{setData([]);}}).catch(function(e){return console.log(e);});case 3:_context3.next=6;break;case 5:message=\"Please allow location access to view the weather.\";case 6:case\"end\":return _context3.stop();}},_callee3);}));return _fetchWeatherDataBasedOnLatLong.apply(this,arguments);}var fecthDataForEnteredLocation=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(userInput){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!userInput){_context2.next=5;break;}_context2.next=3;return fetch(\"\".concat(process.env.REACT_APP_WEATHER_APP_API_URL_GEO,\"?q=\").concat(userInput,\"&limit=\",1,\"&appid=\").concat(process.env.REACT_APP_WEATHER_APP_API_KEY)).then(function(res){return res.json();}).then(function(res){console.log(res);if(res){fetchWeatherDataBasedOnLatLong(res[0].lat,res[0].lon);}else{setData([]);}}).catch(function(e){console.error(e,\"API Request to fetch weather data based on location failed!\");});case 3:_context2.next=5;return fetch(\"\".concat(REACT_APP_UNSPLASH_API_URL,\"?q=\").concat(userInput,\"&client_id=\").concat(REACT_APP_UNSPLASH_ACCESS_KEY)).then(function(res){return res.json();}).then(function(res){console.log(res);if(res){console.log(res);}else{setData([]);}}).catch(function(e){console.error(e,\"API Request to fetch images based on location failed!\");});case 5:;case 6:case\"end\":return _context2.stop();}},_callee2);}));return function fecthDataForEnteredLocation(_x3){return _ref2.apply(this,arguments);};}();function handleError(error){// Display error based on the error code.\nvar code=error.code;switch(code){case GeolocationPositionError.TIMEOUT:// Handle timeout.\nmessage=\"Connection timeout.\";break;case GeolocationPositionError.PERMISSION_DENIED:// User denied the request.\nmessage=\"Please allow location access to view the weather.\";break;case GeolocationPositionError.POSITION_UNAVAILABLE:// Position not available.\nmessage=\"Weather for current position is not available\";break;default:break;}}return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col justify-between items-center m-auto\",children:[/*#__PURE__*/_jsx(Search,{onSubmit:fecthDataForEnteredLocation}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row justify-between items-center m-2\",children:[/*#__PURE__*/_jsx(InfoTile,{}),data?/*#__PURE__*/_jsx(WeatherTile,{weatherData:data}):/*#__PURE__*/_jsx(\"h1\",{children:message})]})]});};export default WeatherApp;","map":{"version":3,"names":["React","useEffect","useState","WeatherTile","Search","InfoTile","WeatherApp","latitude","setLatitude","longitude","setLongitude","data","setData","message","console","log","fetchWeatherData","navigator","geolocation","getCurrentPosition","position","coords","err","handleError","enableHighAccuracy","maximumAge","fetchWeatherDataBasedOnLatLong","fetch","process","env","REACT_APP_WEATHER_APP_API_URL","REACT_APP_WEATHER_APP_API_KEY","then","res","json","catch","e","fecthDataForEnteredLocation","userInput","REACT_APP_WEATHER_APP_API_URL_GEO","lat","lon","error","REACT_APP_UNSPLASH_API_URL","REACT_APP_UNSPLASH_ACCESS_KEY","code","GeolocationPositionError","TIMEOUT","PERMISSION_DENIED","POSITION_UNAVAILABLE"],"sources":["C:/Users/FSAD-1/weather-app/src/WeatherApp.js"],"sourcesContent":["/* eslint-disable no-undef */\r\nimport React, { useEffect, useState } from 'react';\r\nimport WeatherTile from './components/WeatherTile';\r\nimport Search from './components/Search';\r\nimport InfoTile from './components/InfoTile';\r\n\r\nfunction WeatherApp() {\r\n\r\n    const [latitude, setLatitude] = useState();\r\n    const [longitude, setLongitude] = useState();\r\n    const [data, setData] = useState();\r\n    let message;\r\n\r\n    // called on very first render - get weather data for current location\r\n    useEffect(() => {\r\n        console.log(\"Use Effect is Called!!\");\r\n        fetchWeatherData();\r\n        // eslint-disable-next-line\r\n    }, [latitude, longitude]);\r\n\r\n    const fetchWeatherData = async () => {\r\n\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            setLatitude(latitude);\r\n            setLongitude(longitude);\r\n        }, (err) => {\r\n            console.log(err);\r\n            handleError(err);\r\n        }, { enableHighAccuracy: false, maximumAge: 700_000 });\r\n\r\n        fetchWeatherDataBasedOnLatLong(latitude, longitude);\r\n    };\r\n\r\n    async function fetchWeatherDataBasedOnLatLong(latitude, longitude) {\r\n        if (latitude && longitude) {\r\n            await fetch(`${process.env.REACT_APP_WEATHER_APP_API_URL}?lat=${latitude}&lon=${longitude}&appid=${process.env.REACT_APP_WEATHER_APP_API_KEY}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res);\r\n                    if (res) {\r\n                        setData(res);\r\n                    } else {\r\n                        setData([]);\r\n                    }\r\n                }).catch(e => console.log(e));\r\n        } else {\r\n            message = \"Please allow location access to view the weather.\";\r\n        }\r\n    }\r\n\r\n    // Fetch data based on user entered location\r\n    const fecthDataForEnteredLocation = async (userInput) => {\r\n        if (userInput) {\r\n            await fetch(`${process.env.REACT_APP_WEATHER_APP_API_URL_GEO}?q=${userInput}&limit=${1}&appid=${process.env.REACT_APP_WEATHER_APP_API_KEY}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res);\r\n                    if (res) {\r\n                        fetchWeatherDataBasedOnLatLong(res[0].lat, res[0].lon);\r\n                    } else {\r\n                        setData([]);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.error(e, \"API Request to fetch weather data based on location failed!\");\r\n                });\r\n\r\n            // https://api.unsplash.com/search/photos?query=london&client_id=fw2zlJOUjToFveG6ogLrlqax3A2Gt5Pw69GrPZIlo2o\r\n            await fetch(`${REACT_APP_UNSPLASH_API_URL}?q=${userInput}&client_id=${REACT_APP_UNSPLASH_ACCESS_KEY}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res);\r\n                    if (res) {\r\n                        console.log(res)\r\n                    } else {\r\n                        setData([]);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.error(e, \"API Request to fetch images based on location failed!\");\r\n                });\r\n        };\r\n    }\r\n\r\n    function handleError(error) {\r\n        // Display error based on the error code.\r\n        const { code } = error;\r\n        switch (code) {\r\n            case GeolocationPositionError.TIMEOUT:\r\n                // Handle timeout.\r\n                message = \"Connection timeout.\"\r\n                break;\r\n            case GeolocationPositionError.PERMISSION_DENIED:\r\n                // User denied the request.\r\n                message = \"Please allow location access to view the weather.\"\r\n                break;\r\n            case GeolocationPositionError.POSITION_UNAVAILABLE:\r\n                // Position not available.\r\n                message = \"Weather for current position is not available\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-between items-center m-auto\">\r\n            <Search onSubmit={fecthDataForEnteredLocation} />\r\n            <div className='flex flex-row justify-between items-center m-2'>\r\n                <InfoTile />\r\n                {\r\n                    data ?\r\n                        <WeatherTile weatherData={data} /> :\r\n                        <h1>{message}</h1>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default WeatherApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}