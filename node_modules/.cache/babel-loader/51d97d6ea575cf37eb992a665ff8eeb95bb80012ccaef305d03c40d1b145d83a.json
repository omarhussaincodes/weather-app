{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FSAD-1\\\\weather-app\\\\src\\\\WeatherApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport WeatherTile from './components/WeatherTile';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherApp() {\n  _s();\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const [data, setData] = useState();\n\n  // called on very first render and everytime the state (lat,long) changes.\n  useEffect(() => {\n    console.log(\"Use Effect is Calledd!!\");\n    const fetchWeatherData = async () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n      });\n      const response = await axios.get(`${process.env.REACT_APP_WEATHER_APP_API_URL}?lat=${latitude}&lon=${longitude}&appid=${process.env.REACT_APP_WEATHER_APP_API_KEY}`);\n      if (response) {\n        console.log(response);\n        setData(response);\n      } else {\n        setData([]);\n      }\n    };\n    fetchWeatherData();\n  }, [latitude, longitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data ? /*#__PURE__*/_jsxDEV(WeatherTile, {\n        weatherData: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No data found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherApp, \"NOlcL2zd8CcNMm9NUnF2ZEBKHhc=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useEffect","useState","WeatherTile","axios","WeatherApp","latitude","setLatitude","longitude","setLongitude","data","setData","console","log","fetchWeatherData","navigator","geolocation","getCurrentPosition","position","coords","response","get","process","env","REACT_APP_WEATHER_APP_API_URL","REACT_APP_WEATHER_APP_API_KEY"],"sources":["C:/Users/FSAD-1/weather-app/src/WeatherApp.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport WeatherTile from './components/WeatherTile';\r\nimport axios from 'axios';\r\n\r\nfunction WeatherApp() {\r\n    const [latitude, setLatitude] = useState();\r\n    const [longitude, setLongitude] = useState();\r\n    const [data, setData] = useState();\r\n\r\n    // called on very first render and everytime the state (lat,long) changes.\r\n    useEffect(() => {\r\n        console.log(\"Use Effect is Calledd!!\");\r\n        const fetchWeatherData = async () => {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                setLatitude(position.coords.latitude);\r\n                setLongitude(position.coords.longitude);\r\n            });\r\n            const response = await axios.get(`${process.env.REACT_APP_WEATHER_APP_API_URL}?lat=${latitude}&lon=${longitude}&appid=${process.env.REACT_APP_WEATHER_APP_API_KEY}`);\r\n            if (response) {\r\n                console.log(response);\r\n                setData(response)\r\n            } else {\r\n                setData([]);\r\n            }\r\n        };\r\n        fetchWeatherData();\r\n    }, [latitude, longitude]);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n\r\n            </div>\r\n            <div>\r\n                {\r\n                    data ?\r\n                        <WeatherTile weatherData={data} /> :\r\n                        <div>No data found!</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherApp\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,UAAU,GAAG;EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,EAAE;EAC1C,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,EAAE;EAC5C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,EAAE;;EAElC;EACAD,SAAS,CAAC,MAAM;IACZW,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,MAAMC,gBAAgB,GAAG,YAAY;MACjCC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;QACnDX,WAAW,CAACW,QAAQ,CAACC,MAAM,CAACb,QAAQ,CAAC;QACrCG,YAAY,CAACS,QAAQ,CAACC,MAAM,CAACX,SAAS,CAAC;MAC3C,CAAC,CAAC;MACF,MAAMY,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,6BAA8B,QAAOlB,QAAS,QAAOE,SAAU,UAASc,OAAO,CAACC,GAAG,CAACE,6BAA8B,EAAC,CAAC;MACpK,IAAIL,QAAQ,EAAE;QACVR,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;QACrBT,OAAO,CAACS,QAAQ,CAAC;MACrB,CAAC,MAAM;QACHT,OAAO,CAAC,EAAE,CAAC;MACf;IACJ,CAAC;IACDG,gBAAgB,EAAE;EACtB,CAAC,EAAE,CAACR,QAAQ,EAAEE,SAAS,CAAC,CAAC;EAEzB,oBACI;IAAA,wBACI;MAAA;MAAA;MAAA;IAAA,QAEM,eACN;MAAA,UAEQE,IAAI,gBACA,QAAC,WAAW;QAAC,WAAW,EAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,gBAClC;QAAA,UAAK;MAAc;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QAE/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAtCQL,UAAU;AAAA,KAAVA,UAAU;AAwCnB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}